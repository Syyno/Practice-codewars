//Greed is a dice game played with five six-sided dice. Your mission, should you choose to accept it, is to score a throw according
//to these rules. You will always be given an array with five six-sided dice values.

 //Three 1's => 1000 points
 //Three 6's =>  600 points
 //Three 5's =>  500 points
 //Three 4's =>  400 points
 //Three 3's =>  300 points
 //Three 2's =>  200 points
 //One   1   =>  100 points
 //One   5   =>   50 point
 //A single die can only be counted once in each roll. For example, a "5" can only count as part of a triplet (contributing to
 //the 500 points) or as a single 50 points, but not both in the same roll.

//Example scoring

// Throw       Score
// ---------   ------------------
// 5 1 3 4 1   50 + 2 * 100 = 250
// 1 1 1 3 1   1000 + 100 = 1100
// 2 4 4 5 4   400 + 50 = 450

using System;

public static class Kata
{
  public static int Score(int[] dice) 
  {
    int one=0, two=0, three=0, four=0, five=0, six=0; 
    int score = 0;
    
    foreach (int i in dice)
    {
      if (i==1)
        one++;
      if (i==2)
        two++;
      if (i==3)
        three++;  
      if (i==4)
        four++; 
      if (i==5)
        five++;  
      if (i==6)
        six++;  
    }
    
    while (one > 0)
    {
      if (one > 2)
      {
        score+= 1000;
        one -= 3;
      }
      else if (one <=2)
      {
        one--;
        score+=100;
      }   
    }

    while (five > 0)
    {
      if (five > 2)
      {
        score += 500;
        five -= 3;
      }
      else if (five <=2)
      {
        five--;
        score+=50;
      }
    }

    if (two >= 3)
    {
      while (two > 2)
      {
        score += 200;
        two -=3;
      }
    }

    if (three >= 3) 
    {
      while (three > 2)
      {
        score += 300;
        three -=3;
      }
    }

    if (four >= 3)
    {
      while (four > 2)
      {
        score += 400;
        four -=3;
      }
    }

    if (six >= 3)
    {
      while (six > 2)
      {
        score += 600;
        six -=3;
      }
    }
      
    return score;
  }
}
