//Basically you have to assume that n people are put into a circle and that they are eliminated in steps of k elements, like this:

//josephus_survivor(7,3) => means 7 people in a circle;
//one every 3 is eliminated until one remains
//[1,2,3,4,5,6,7] - initial sequence
//[1,2,4,5,6,7] => 3 is counted out
//[1,2,4,5,7] => 6 is counted out
//[1,4,5,7] => 2 is counted out
//[1,4,5] => 7 is counted out
//[1,4] => 5 is counted out
//[4] => 1 counted out, 4 is the last element - the survivor!

using System;
using System.Linq;

public class JosephusSurvivor 
{
  	public static int JosSurvivor(int n, int k) 
    {
      int j = 1;
      int i = 0;
      var range = Enumerable.Range(1, n).ToList();
      bool b = false;
      
      while (range.Count > 1)
      {
          b = false;
          if (i >= range.Count)
              i = 0;
          if (j == k)
          {
              range.RemoveAt(i);
              j = 1;
              b = true;
          }
          i = b ? i : i += 1;
          j = b ? j : j += 1;
      }
      
      return range[0];
    }  
}
