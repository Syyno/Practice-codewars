//You have to create a function that takes a positive integer number and returns the next bigger number formed by the same digits:

//12 ==> 21
//513 ==> 531
//2017 ==> 2071
//If no bigger number can be composed using those digits, return -1:

//9 ==> -1
//111 ==> -1
//531 ==> -1



using System;
using System.Collections.Generic;

public class Kata
{
  public static long NextBiggerNumber(long n)
  {
    char[] chars = n.ToString().ToCharArray();
    List<long> list = new List<long>();

    foreach (char c in chars)
    {
        list.Add(Convert.ToInt64(Char.GetNumericValue(c)));
    }

    int k = 0;

    for (int i = list.Count - 1; i >= 0; i--)
    {
        if (i - 1 >= 0 && list[i] > list[i - 1])
        {
            k = --i;
            if (k < 0)
                k = 0;
            break;
        }
        if (i == 0)
        {
            return -1;
        }
    }

    List<long> longs = new List<long>();

    for (int j = k; j < list.Count; j++)
    {
        longs.Add(list[j]);
    }

    string Shuffler(List<long> l)
    {
        string f = "";
        long first = l[0];
        first++;
        int j = -1;
        for (int i = 1; i <= 9; i++)
        {
            if (l.Contains(first))
            {
                j = l.IndexOf(first);
                break;
            }
            first++;
        }

        long a = l[0];

        l[0] = l[j];
        l[j] = a;

        f += l[0].ToString();
        l.RemoveAt(0);
        l.Sort();
        for (int i = 0; i < l.Count; i++)
        {
            f += l[i].ToString();
        }
        return f;
    }

    string str = "";

    for (int i = 0; i < k; i++)
    {
        str += list[i].ToString();
    }

    str += Shuffler(longs);

    return Int64.Parse(str);
  }
}
