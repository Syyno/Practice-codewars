/* 
Enough is enough!
Task
Given a list lst and a number N, create a new list that contains each number of lst at most N times without reordering.
For example if N = 2, and the input is [1,2,3,1,2,1,2,3], you take [1,2,3,1,2], drop the next [1,2] since this would lead 
to 1 and 2 being in the result 3 times, and then take 3, which leads to [1,2,3,1,2,3].

Example
Kata.DeleteNth (new int[] {20,37,20,21}, 1) // return [20,37,21]
Kata.DeleteNth (new int[] {1,1,3,3,7,2,2,2,2}, 3) // return [1, 1, 3, 3, 7, 2, 2, 2] 
*/


using System;
using System.Collections.Generic;
using System.Linq;

public class Kata {
  public static int[] DeleteNth(int[] arr, int x) {
  
    Dictionary<int,int> dictionary = new Dictionary<int, int>();
    List<int> list = new List<int>();
    
    foreach (var i in arr)
    {
        dictionary[i] = 0;
    }
    
    foreach (int i in arr)
    {
        if (dictionary[i] < x)
        {
            dictionary[i] += 1;
            list.Add(i);
        }
    }
    
    return list.ToArray();
  }
}
