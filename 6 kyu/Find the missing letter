//#Find the missing letter

//Write a method that takes an array of consecutive (increasing) letters as input and that returns the missing letter in the array.

//You will always get an valid array. And it will be always exactly one letter be missing. 
//The length of the array will always be at least 2.
//The array will always contain letters in only one case.

//Example:

//['a','b','c','d','f'] -> 'e' ['O','Q','R','S'] -> 'P'

//["a","b","c","d","f"] -> "e"
//["O","Q","R","S"] -> "P"

using System;

public class Kata
{
  public static char FindMissingLetter(char[] array)
  {
    char c = default;
    char[] alphabet = {'a','b','c','d','e','f','g','h','i','j','k','l','m',
                       'n','o','p','q','r','s','t','u','v','w','x','y','z'};
    int cases = array[0] == Char.ToUpper(array[0]) ? 1 : 0;
    bool b = false;
    int j=0;
    
    for (int i=0; i<alphabet.Length; i++)
    {
      if (alphabet[i] != Char.ToLower(array[j]) && !b)
        continue;
      else if (alphabet[i] == Char.ToLower(array[j]))
      {
        b = true;
        j++;
      }
      else if (b && alphabet[i] != Char.ToLower(array[j]))
      {
        c = alphabet[i];
        break;
      }    
    }
   
    return cases == 1 ? Char.ToUpper(c) : Char.ToLower(c);
  }
}
