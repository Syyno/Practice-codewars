//Everyone knows passphrases. One can choose passphrases from poems, songs, movies names and so on but frequently they can be
//guessed due to common cultural references. You can get your passphrases stronger by different means. One is the following:

//choose a text in capital letters including or not digits and non alphabetic characters,

//shift each letter by a given number but the transformed letter must be a letter (circular shift),
//replace each digit by its complement to 9,
//keep such as non alphabetic and non digit characters,
//downcase each letter in odd position, upcase each letter in even position (the first character is in position 0),
//reverse the whole result.
//#Example:

//your text: "BORN IN 2015!", shift 1

//1 + 2 + 3 -> "CPSO JO 7984!"

//4 "CpSo jO 7984!"

//5 "!4897 Oj oSpC"

using System;
using System.Collections.Generic;

public class PlayPass 
{
  public static string playPass(string s, int n) 
  {
    List<char> res = new List<char>();
    
		foreach (char c in s)
    {
      if (Char.IsLetter(c))
      {
        int code = (int) c;
        if (code >= 65 && code <=90)
        {
          code = code + n;
          if (code > 90) 
          {
            code = (code-90) + 64;
          }
        }
        else if (code >=97 && code <= 122)
        {
          code = code + n;
          if (code > 122) 
          {
            code = (code-122) + 96;
          }
        }
        char ch = (char) code;
        res.Add(ch);
      }
      else if (Char.IsDigit(c))
      {
        int d = (int)Char.GetNumericValue(c);
        d = 9 - d;
        string ss = d.ToString();
        char dd = Convert.ToChar(ss);
        res.Add(dd);
      }
      else
        res.Add(c);
    }
      
     for (int i=1; i<res.Count;i++)
     {
       if (Char.IsLetter(res[i]))
       {
         if (i % 2 == 0)
          {
            res[i] = Char.ToUpper(res[i]);  
          }
          else 
          {
            res[i] = Char.ToLower(res[i]); 
          }
       }
     }
      
     string strng = "";
     foreach (char c in res)
     {
        strng += c;
     }
     
     char[] chars = strng.ToCharArray();
     Array.Reverse(chars);
     
     return String.Concat(chars);
  }
}
